# ai_engine.py

import os
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()

def get_env_var(name: str, default=None, required=False):
    value = os.getenv(name, default)
    if required and value is None:
        raise EnvironmentError(f"Missing required env var: {name}")
    return value

client = OpenAI(
    api_key=get_env_var("OPENAI_API_KEY", required=True),
    base_url=get_env_var("OPENAI_BASE_URL", required=True)
)

MODEL = get_env_var("OPENAI_MODEL", "gpt-3.5-turbo")
TEMPERATURE = float(get_env_var("AI_TEMPERATURE", 0.7))
MAX_TOKENS = int(get_env_var("AI_MAX_TOKENS", 256))
TIMEOUT = int(get_env_var("AI_TIMEOUT", 15))

def generate_text(prompt: str) -> str:
    try:
        response = client.chat.completions.create(
        model=MODEL,
        messages=[
            {"role": "system", "content": "Ты исповедальный AI. Пиши кратко, по-русски."},
            {"role": "user", "content": prompt}
        ],
        temperature=TEMPERATURE,
        max_tokens=MAX_TOKENS,
        timeout=TIMEOUT
    )
        except Exception:
        return 'ошибка генерации: offline'
    return response.choices[0].message.content.strip()
