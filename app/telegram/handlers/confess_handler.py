# app/telegram/handlers/confess_handler.py
from telegram import Update
from telegram.ext import (
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters,
)

import app.services.confess_service as confess_service
import app.telegram.helpers as helpers
from config.config import Config
from app.services.ai_generate import generate_confession

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ (in-memory)
pending_confess: set[str] = set()


async def confess(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /confess ‚Äî —Å—Ç–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –≤–≤–æ–¥–∞ –∏—Å–ø–æ–≤–µ–¥–∏."""
    user_id = str(update.effective_user.id)
    pending_confess.add(user_id)
    await helpers.safe_reply(update, context, "üìù –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –∏—Å–ø–æ–≤–µ–¥—å (20‚Äì50 —Å–∏–º–≤–æ–ª–æ–≤):")


async def handle_confession_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–õ–æ–≤–∏–º —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ —é–∑–µ—Ä –≤ pending_confess."""
    if not update or not getattr(update, "message", None) or not update.message.text:
        return

    user_id = str(update.effective_user.id)
    if user_id not in pending_confess:
        return

    text = update.message.text.strip()
    if len(text) < 20 or len(text) > 50:
        await helpers.safe_reply(update, context, "‚ö†Ô∏è –ò—Å–ø–æ–≤–µ–¥—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 20 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return

    try:
        confess_service.save_confession(user_id, text)
        await helpers.safe_reply(update, context, "üôè –ò—Å–ø–æ–≤–µ–¥—å –ø—Ä–∏–Ω—è—Ç–∞.")

        # --- –ò–ò-–æ—Ç–≤–µ—Ç –Ω–∞ –∏—Å–ø–æ–≤–µ–¥—å ---
        if getattr(Config, "USE_AI_CONFESS_REPLY", False):
            try:
                ai_reply = generate_confession(conn=None, user_id=user_id)
                if ai_reply:
                    await helpers.safe_reply(update, context, ai_reply)
            except Exception:
                pass  # –ù–µ –≤–∞–ª–∏–º —Ö–µ–Ω–¥–ª–µ—Ä, –µ—Å–ª–∏ –ò–ò –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª

    except Exception:
        await helpers.safe_reply(update, context, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.")
    finally:
        pending_confess.discard(user_id)


# --- –≠–∫—Å–ø–æ—Ä—Ç —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –¥–ª—è dispatcher ---
command_handler = CommandHandler("confess", confess)
text_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, handle_confession_text)

__all__ = ["command_handler", "text_handler"]
